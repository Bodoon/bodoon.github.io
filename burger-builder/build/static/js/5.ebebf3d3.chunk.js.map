{"version":3,"sources":["components/Order/Order.module.scss","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","OrderIngredients","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","key","className","classes","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,qBAAAC,iBAAA,2JC0BHC,EAvBD,SAACC,GACX,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KAAK,CACbC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAIlC,IAAMI,EAAmBL,EAAYM,IAAI,SAAAC,GACrC,OAAOC,EAAAC,EAAAC,cAAA,QAAMC,IAAKJ,EAAGJ,KAAMS,UAAWC,IAAQhB,kBAAmBU,EAAGJ,KAA7D,IAAoEI,EAAGH,UAGlF,OACII,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQjB,OACpBY,EAAAC,EAAAC,cAAA,yBACCL,EACDG,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,qBAAaX,EAAMe,MAAMC,QAAQ,uCCZjDC,8LAGEC,KAAKlB,MAAMmB,cAAcD,KAAKlB,MAAMoB,MAAOF,KAAKlB,MAAMqB,yCAItD,IAAIC,EAASb,EAAAC,EAAAC,cAACY,EAAA,EAAD,MAWb,OAVIL,KAAKlB,MAAMwB,UACXF,EACIJ,KAAKlB,MAAMsB,OAAOf,IAAI,SAAAR,GAAK,OACvBU,EAAAC,EAAAC,cAACd,EAAD,CACIe,IAAKb,EAAM0B,GACXxB,YAAaF,EAAME,YACnBc,OAAQhB,EAAMgB,WAK1BN,EAAAC,EAAAC,cAAA,WACKW,UApBII,aAyCNC,sBAfS,SAAAC,GACpB,MAAO,CACHN,OAAQM,EAAM7B,MAAMuB,OACpBE,QAASI,EAAM7B,MAAMyB,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,SAIA,SAAAS,GACvB,MAAO,CACHX,cAAe,SAACC,EAAOC,GAAR,OAAmBS,EAASC,IAAoBX,EAAOC,OAI/DM,CAA6CK,YAAiBf,EAAQgB","file":"static/js/5.ebebf3d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__-aw4y\",\"OrderIngredients\":\"Order_OrderIngredients__2xx1A\"};","import React from 'react';\r\n\r\nimport classes from './Order.module.scss';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount: props.ingredients[ingredientName]\r\n        });\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span key={ig.name} className={classes.OrderIngredients}>{ig.name} {ig.amount}</span>\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients:</p>\r\n            {ingredientOutput}\r\n            <p>Price: <strong>USD {props.price.toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner/>;\r\n        if(!this.props.loading) {\r\n            orders = (\r\n                this.props.orders.map(order => (\r\n                    <Order\r\n                        key={order.id}\r\n                        ingredients={order.ingredients}\r\n                        price={+order.price}/>\r\n                ))\r\n            );\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}